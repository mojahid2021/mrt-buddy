package net.adhikary.mrtbuddy.ui.theme

import androidx.compose.ui.graphics.Color

val Transparent = Color(0x00000000)


// Light Theme Colors
val LightRapidPass = Color(0xFF2196F3)  // Blue color for Rapid Pass
val LightMRTPass = Color(0xFF408E2D)  // Green color for MRT Pass
val LightPositiveGreen = Color(0xFF4CAF50)
val LightNegativeRed = Color(0xFFB00020)
val Alert_yellow_L = Color(0xFFFFBF00)

// Light Theme Material Colors
val primaryLight = Color(0xFF418E2C)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF418E2C)
val onPrimaryContainerLight = Color(0xFFFFFFFF)
val secondaryLight = Color(0xFF586249)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFF418E2C)
val onSecondaryContainerLight = Color(0xFFFFFFFF)
val tertiaryLight = Color(0xFF586249)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF418E2C)
val onTertiaryContainerLight = Color(0xFFFFFFFF)
val errorLight = Color(0xFFB00020)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFF5F5F5)
val onBackgroundLight = Color(0xFF000000)
val surfaceLight = Color(0xFFF5F5F5)
val onSurfaceLight = Color(0xFF000000)
val surfaceVariantLight = Color(0xFFE1E4D5)
val onSurfaceVariantLight = Color(0xFF44483D)
val outlineLight = Color(0xFF75796C)
val outlineVariantLight = Color(0xFFC5C8BA)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF2F312A)
val inverseOnSurfaceLight = Color(0xFFF1F2E6)
val inversePrimaryLight = Color(0xFFB1D18A)
val surfaceDimLight = Color(0xFFDADBD0)
val surfaceBrightLight = Color(0xFFF5F5F5)
val surfaceContainerLowestLight = Color(0xFFDADBD0)
val surfaceContainerLowLight = Color(0xFFDADBD0)
val surfaceContainerLight = Color(0xFFFFFFFF)
val surfaceContainerHighLight = Color(0xFFFFFFFF)
val surfaceContainerHighestLight = Color(0xFFFFFFFF)

// Dark Theme Colors
val DarkRapidPass = Color(0xFF42A5F5)  // Slightly lighter blue for dark theme
val DarkMRTPass = Color(0xFF4CAF50)  // Slightly lighter green for dark theme
val DarkPositiveGreen = Color(0xFF81C784)
val DarkNegativeRed = Color(0xFFCF6679)
val Alert_yellow_D = Color(0xFFFFEB3B)

// Dark Theme Material Colors
val primaryDark = Color(0xFF4CAF50)
val onPrimaryDark = Color(0xFFFFFFFF)
val primaryContainerDark = Color(0xFF4CAF50)
val onPrimaryContainerDark = Color(0xFFFFFFFF)
val secondaryDark = Color(0xFF4CAF50)
val onSecondaryDark = Color(0xFFFFFFFF)
val secondaryContainerDark = Color(0xFF4CAF50)
val onSecondaryContainerDark = Color(0xFFFFFFFF)
val tertiaryDark = Color(0xFF4CAF50)
val onTertiaryDark = Color(0xFFFFFFFF)
val tertiaryContainerDark = Color(0xFF4CAF50)
val onTertiaryContainerDark = Color(0xFFFFFFFF)
val errorDark = Color(0xFFCF6679)
val onErrorDark = Color(0xFF000000)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF121212)
val onBackgroundDark = Color(0xFFFFFFFF)
val surfaceDark = Color(0xFF121212)
val onSurfaceDark = Color(0xFFFFFFFF)
val surfaceVariantDark = Color(0xFF44483D)
val onSurfaceVariantDark = Color(0xFFC5C5C5)
val outlineDark = Color(0xFF8F9285)
val outlineVariantDark = Color(0xFF44483D)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE2E3D8)
val inverseOnSurfaceDark = Color(0xFF2F312A)
val inversePrimaryDark = Color(0xFF4C662B)
val surfaceDimDark = Color(0xFF292929)
val surfaceBrightDark = Color(0xFF474747)
val surfaceContainerLowestDark = Color(0xFF474747)
val surfaceContainerLowDark = Color(0xFF474747)
val surfaceContainerDark = Color(0xFF383838)
val surfaceContainerHighDark = Color(0xFF292929)
val surfaceContainerHighestDark = Color(0xFF292929)
